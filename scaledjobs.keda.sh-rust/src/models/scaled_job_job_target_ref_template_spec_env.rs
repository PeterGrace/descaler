/*
 * scaledjobs.keda.sh
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ScaledJobJobTargetRefTemplateSpecEnv : EnvVar represents an environment variable present in a Container.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, Default, JsonSchema)]
pub struct ScaledJobJobTargetRefTemplateSpecEnv {
    /// Name of the environment variable. Must be a C_IDENTIFIER.
    #[serde(rename = "name")]
    pub name: String,
    /// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    #[serde(rename = "valueFrom", skip_serializing_if = "Option::is_none")]
    pub value_from: Option<crate::models::ScaledJobJobTargetRefTemplateSpecValueFrom>,
}

impl ScaledJobJobTargetRefTemplateSpecEnv {
    /// EnvVar represents an environment variable present in a Container.
    pub fn new(name: String) -> ScaledJobJobTargetRefTemplateSpecEnv {
        ScaledJobJobTargetRefTemplateSpecEnv {
            name,
            value: None,
            value_from: None,
        }
    }
}


